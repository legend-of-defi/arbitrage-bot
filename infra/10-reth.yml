---
- name: Install and launch Reth
  hosts: all
  become: true
  vars:
    # https://github.com/paradigmxyz/reth/releases
    reth_version: "v1.1.5"
  tasks:
    - name: Import Reth GPG key
      ansible.builtin.command:
        cmd: gpg --keyserver keyserver.ubuntu.com --recv-keys 50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E
      args:
        creates: /root/.gnupg/pubring.kbx

    - name: Download Reth binary
      ansible.builtin.get_url:
        url: "https://github.com/paradigmxyz/reth/releases/download/{{ reth_version }}/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz"
        mode: '0644'

    - name: Download Reth signature
      ansible.builtin.get_url:
        url: "https://github.com/paradigmxyz/reth/releases/download/{{ reth_version }}/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz.asc"
        dest: "/tmp/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz.asc"
        mode: '0644'

    - name: Verify Reth binary
      ansible.builtin.command:
        cmd: gpg --verify /tmp/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz.asc /tmp/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz
      register: gpg_verify
      failed_when: "'Good signature' not in gpg_verify.stderr"
      changed_when: false

    - name: Extract Reth binary
      ansible.builtin.unarchive:
        src: "/tmp/reth-{{ reth_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: /usr/local/bin/
        remote_src: true
        creates: /usr/local/bin/reth

    - name: Create Reth system user
      ansible.builtin.user:
        name: reth
        system: true
        shell: /sbin/nologin
        groups: fly
        append: true
        create_home: false

    - name: Create Reth working directory
      ansible.builtin.file:
        path: /opt/reth
        state: directory
        owner: reth
        group: reth
        mode: '0755'

    - name: Generate JWT secret for Reth
      ansible.builtin.shell: |
        printf "%s" "$(openssl rand -hex 32)" > /opt/reth/jwt.hex
      args:
        creates: /opt/reth/jwt.hex

    - name: Deploy Reth systemd service file
      ansible.builtin.template:
        src: templates/reth.service.j2
        dest: /etc/systemd/system/reth.service
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Ensure Reth service is enabled and started
      ansible.builtin.systemd:
        name: reth
        enabled: true
        state: started

    - name: Set JWT file ownership and permissions
      ansible.builtin.file:
        path: /opt/reth/jwt.hex
        owner: reth
        group: fly
        mode: '0640'
